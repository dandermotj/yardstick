% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prob-gini.R
\name{gini}
\alias{gini}
\alias{gini.data.frame}
\alias{gini_vec}
\title{Gini coefficient}
\usage{
gini(data, ...)

\method{gini}{data.frame}(data, truth, ..., options = list(),
  estimator = NULL, na_rm = TRUE)

gini_vec(truth, estimate, options = list(), estimator = NULL,
  na_rm = TRUE, ...)
}
\arguments{
\item{data}{A \code{data.frame} containing the \code{truth} and \code{estimate}
columns.}

\item{...}{A set of unquoted column names or one or more
\code{dplyr} selector functions to choose which variables contain the
class probabilities. If \code{truth} is binary, only 1 column should be selected.
Otherwise, there should be as many columns as factor levels of \code{truth}.}

\item{truth}{The column identifier for the true class results
(that is a \code{factor}). This should be an unquoted column name although
this argument is passed by expression and supports
\link[rlang:quasiquotation]{quasiquotation} (you can unquote column
names). For \code{_vec()} functions, a \code{factor} vector.}

\item{options}{A \code{list} of named options to pass to \code{\link[pROC:roc]{pROC::roc()}}
such as \code{direction} or \code{smooth}. These options should not include \code{response},
\code{predictor}, or \code{levels}.}

\item{estimator}{One of \code{"binary"}, \code{"hand_till"}, \code{"macro"}, or
\code{"macro_weighted"} to specify the type of averaging to be done. \code{"binary"}
is only relevant for the two class case. The others are general methods for
calculating multiclass metrics. The default will automatically choose
\code{"binary"} or \code{"hand_till"} based on \code{truth}.}

\item{na_rm}{A \code{logical} value indicating whether \code{NA}
values should be stripped before the computation proceeds.}

\item{estimate}{If \code{truth} is binary, a numeric vector of class probabilities
corresponding to the "relevant" class. Otherwise, a matrix with as many
columns as factor levels of \code{truth}. \emph{It is assumed that these are in the
same order as the levels of \code{truth}.}}
}
\value{
A \code{tibble} with columns \code{.metric}, \code{.estimator},
and \code{.estimate} and 1 row of values.

For grouped data frames, the number of rows returned will be the same as
the number of groups.

For \code{gini_vec()}, a single \code{numeric} value (or \code{NA}).
}
\description{
\code{gini()} is a metric that computes the Gini coefficient for measuring the
discriminatory power of a predictive model. Also referred to as accuracy
ratio (AR), the Gini coefficient is a rescale and shift of the Area Under the ROC
curve (AUC): \eqn{Gini + 1 = 2AUC}.
}
\details{
See \code{?roc_auc} for an explanation of computing AUC for the multiclass case.
}
\section{Relevant level}{


There is no common convention on which factor level should
automatically be considered the "event" or "positive" result.
In \code{yardstick}, the default is to use the \emph{first} level. To
change this, a global option called \code{yardstick.event_first} is
set to \code{TRUE} when the package is loaded. This can be changed
to \code{FALSE} if the last level of the factor is considered the
level of interest. For multiclass extensions involving one-vs-all
comparisons (such as macro averaging), this option is ignored and
the "one" level is always the relevant result.
}

\examples{
# Two class
data("two_class_example")
gini(two_class_example, truth, Class1)

# Multiclass
library(dplyr)
data(hpc_cv)

# You can use the col1:colN tidyselect syntax
hpc_cv \%>\%
  filter(Resample == "Fold01") \%>\%
  gini(obs, VF:L)

# Groups are respected
hpc_cv \%>\%
  group_by(Resample) \%>\%
  gini(obs, VF:L)

# Weighted macro averaging
hpc_cv \%>\%
  group_by(Resample) \%>\%
  gini(obs, VF:L, estimator = "macro_weighted")

# Vector version
# Supply a matrix of class probabilities
fold1 <- hpc_cv \%>\%
  filter(Resample == "Fold01")

gini_vec(
   truth = fold1$obs,
   matrix(
     c(fold1$VF, fold1$F, fold1$M, fold1$L),
     ncol = 4
   )
)


}
\references{
Engelmann, Bernd & Hayden, Evelyn & Tasche, Dirk (2003).
"Measuring the Discriminative Power of Rating Systems,"
Discussion Paper Series 2: Banking and Financial Studies 2003,01, Deutsche Bundesbank.

Hand, Till (2001). "A Simple Generalisation of the Area Under the
ROC Curve for Multiple Class Classification Problems". \emph{Machine Learning}.
Vol 45, Iss 2, pp 171-186.
}
\seealso{
\code{\link[=roc_auc]{roc_auc()}} for computing the area under the ROC curve.

Other class probability metrics: \code{\link{gain_capture}},
  \code{\link{mn_log_loss}}, \code{\link{pr_auc}},
  \code{\link{roc_auc}}
}
\author{
Max Kuhn
}
\concept{class probability metrics}
